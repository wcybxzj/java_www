1.创建maven项目:

maven-archetype-webapp
GroupId:com.imooc
ArtifactId:spring_aspect

2.
src/main下创建java 设置成SourceRoot

3.
配置pom.xml
写applicationContext.xml
============================================================
知识点0.aspectJ提供的不同的通知类型
AspectJ实现AOP有两种方法
-注解方式
-XML方式
============================================================
知识点1.aspectJ提供的不同的通知类型
@Before前置通知

@After后置通知

@Around环绕通知:一个方法前和后都要执行，例如事务
开启事务
function(){

}
提交或者回滚事务

@AfterThrowing异常抛出通知,相当于ThrowAdvice

@Aftrer最终通知,不管是否异常，该通知最后都会执行
============================================================
知识点2:在通知中通过value属性定义切点
execution函数,可以定义切点的方法切入
语法
execution(访问修饰符号(可省略) 返回类型(*就是任意返回值) 方法名(参数)<异常>)

例如:
匹配所有类public方法 execution(public * *(..) )
第1个*:任意返回值
第2个*:任意方法名

匹配实现特定接口或者抽象类所有类方法
execution(* com.imooc.dao.GenericDAO+.*(..))
返回值任意类型
实现了接口或者抽象类com.imooc.dao.GenericDAO的子类
+:就是子类的意思
.*:就是所有方法名
============================================================
lesson3-5异常抛出通知
用环绕通知+异常通知来实现mysql事务处理
============================================================
